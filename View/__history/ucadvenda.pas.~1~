unit ucadvenda;

interface

{$REGION 'Componentes'}

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, UCadastroPadrao, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls,
  Data.DB, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error,
  FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Grids, Vcl.DBGrids, Vcl.DBCtrls, conexao.model, venda.model, vendaitens.model, venda.controller;
  //vendaitens.controller;
{$ENDREGION}

type
  TOperacao = (opInicio, opNovo, opEditar, opNavegar);
  TFrmCadVenda = class(TFrmCadastroPadrao)

{$REGION 'Componentes'}

    BtnPesquisar: TSpeedButton;
    Label1: TLabel;
    Label2: TLabel;
    Label4: TLabel;
    EdtCodVenda: TEdit;
    EdtDataVenda: TEdit;
    EdtTotalVenda: TEdit;
    Label3: TLabel;
    Edit1: TEdit;
    LcbNomeCliente: TDBLookupComboBox;
    Label10: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    EdtQuantidade: TEdit;
    EdtPrecoUnit: TEdit;
    EdtPrecoTotal: TEdit;
    LCbxProdutos: TDBLookupComboBox;
    BtnAddItemGrid: TButton;
    BtnDelItemGrid: TButton;
    DbGridItensPedido: TDBGrid;
    MTblVendaItem: TFDMemTable;
    MTblVendaItemID_VENDA: TIntegerField;
    MTblVendaItemCOD_VENDA: TIntegerField;
    MTblVendaItemCOD_PRODUTO: TIntegerField;
    MTblVendaItemVAL_QUANTIDADE: TIntegerField;
    MTblVendaItemVAL_PRECO_UNITARIO: TSingleField;
    MTblVendaItemVAL_TOTAL_VENDA: TSingleField;
    DsVendaItem: TDataSource;
    BtnInserirItens: TButton;
    BtnLimpaCampos: TSpeedButton;

{$ENDREGION}


    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);


    procedure BtnSairClick(Sender: TObject);


  private
    ValoresOriginais: array of string;
    TblVendas: TFDQuery;
    QryVendas: TFDQuery;
    QryTemp: TFDQuery;
    DsVendas: TDataSource;
    TransacaoVendas: TFDTransaction;
    FVenda: TVenda;
    FVendaItens: TVendaItens;
    VendaController: TVendaController;
    //VendaItensController: TVendaItensController;

    procedure CarregarVendas;
    procedure InserirVendas;
    procedure InserirVendaItens;
    procedure AlterarVendas;
    procedure AlterarVendaItens;
    procedure ExcluirVendas;
    function ValidarDados(tipoDados: string): Boolean;
    procedure LimpaCamposPedido;
    procedure LimpaCamposItens;
    procedure PreencheCdsVendaItem(FOperacao: TOperacao);
    procedure VerificaBotoes(FOperacao: TOperacao);


  public
    FOperacao: TOperacao;
    pesqVenda: Boolean;
    codigoVenda: Integer;
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
  end;

var
  FrmCadVenda: TFrmCadVenda;

implementation

{$R *.dfm}

uses untFormat, UPesqPedidos;


constructor TFrmCadVenda.Create(AOwner: TComponent);
begin
  inherited;
  TransacaoVendas := TFDTransaction.Create(nil);
  DsVendas := TDataSource.Create(nil);
  TblVendas := TFDQuery.Create(nil);
  QryVendas := TFDQuery.Create(nil);
  QryTemp := TFDQuery.Create(nil);
end;

destructor TFrmCadVenda.Destroy;
begin
  TransacaoVendas.Free;
  DsVendas.Free;
  TblVendas.Free;
  QryVendas.Free;
  QryTemp.Free;
  inherited;

end;

procedure TFrmCadVenda.FormCreate(Sender: TObject);
var sCampo: string;
begin
  inherited;
  if TConexao.GetInstance.Connection.TestarConexao then
  begin
    TConexao.GetInstance.Connection.InciarTransacao;
    TransacaoVendas := TConexao.GetInstance.Connection.CriarTransaction;
    TblVendas := TConexao.GetInstance.Connection.CriarQuery;
    QryVendas := TConexao.GetInstance.Connection.CriarQuery;
    QryVendas.Transaction := TransacaoVendas;
    DsVendas := TConexao.GetInstance.Connection.CriarDataSource;
    DsVendas.DataSet := TblVendas;
    //DBGridProdutos.DataSource := DsProdutos;
    //sCampo := 'des_nomeproduto';
    FVenda := TVenda.Create;
    VendaController := TVendaController.Create;
    FOperacao := opInicio;
    SetLength(ValoresOriginais, 3);
  end
  else
  begin
    ShowMessage('Não foi possível conectar ao banco de dados!');
    Close;
  end;

end;

procedure TFrmCadVenda.FormShow(Sender: TObject);
begin
  inherited;
//
end;


procedure TFrmCadVenda.AlterarVendaItens;
begin

end;

procedure TFrmCadVenda.AlterarVendas;
begin

end;

procedure TFrmCadVenda.BtnSairClick(Sender: TObject);
begin
  inherited;
  Close;
end;

procedure TFrmCadVenda.CarregarVendas;
begin

end;

procedure TFrmCadVenda.ExcluirVendas;
begin

end;

procedure TFrmCadVenda.InserirVendaItens;
begin

end;

procedure TFrmCadVenda.InserirVendas;
begin

end;

procedure TFrmCadVenda.LimpaCamposItens;
begin

end;

procedure TFrmCadVenda.LimpaCamposPedido;
begin

end;

procedure TFrmCadVenda.PreencheCdsVendaItem(FOperacao: TOperacao);
begin

end;

function TFrmCadVenda.ValidarDados(tipoDados: string): Boolean;
begin

end;

procedure TFrmCadVenda.VerificaBotoes(FOperacao: TOperacao);
begin

end;

end.
