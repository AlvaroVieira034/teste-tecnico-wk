unit vendaitens.controller;

interface

uses umain, vendaitens.model, vendaitensrepository.model, system.SysUtils, Vcl.Forms, FireDAC.Comp.Client;

type
  TCampoInvalido = (ciData, ciDescricao, ciCliente, ciValor, ciValorZero);
  TVendaItensController = class

  private
    FVendaItens: TVendaItem;
    FVendaItensRepo: TVendaItemRepository;

  public
    constructor Create();
    destructor Destroy; override;
    function Carregar(QryVendasItens: TFDQuery; FVenda: TVenda; ACodigo: Integer): Boolean;
    function Inserir(QryVendasItens: TFDQuery; FVenda: TVenda; Transacao: TFDTransaction; var sErro: string): Boolean;
    function Alterar(QryVendasItens: TFDQuery; FVenda: TVenda; Transacao: TFDTransaction; ACodigo: Integer; sErro: string): Boolean;
    function Excluir(QryVendasItens: TFDQuery; Transacao: TFDTransaction; ACodigo: Integer; var sErro: string): Boolean;
    function ValidarDados(const ACodProduto, AQuantidade, APrecoUnitario, ATotalItem: string; out AErro: TCampoInvalido): Boolean;


  end;

implementation



end.
