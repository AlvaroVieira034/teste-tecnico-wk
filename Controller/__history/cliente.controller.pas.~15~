unit cliente.controller;

interface

uses cliente.model, cliente.repository, icliente.repository, cliente.service, icliente.service, conexao.service,
     System.SysUtils, FireDAC.Comp.Client, FireDAC.Stan.Param, Data.DB;

type
  TCampoInvalido = (ciData, ciCliente, ciValor, ciValorZero);
  TClienteController = class

  private
    FCliente: TCliente;
    FClienteRepository : TClienteRepository;
    FClienteService : TClienteService;

  public
    constructor Create(AClienteRepository: IClienteRepository; AClienteService: IClienteService);
    destructor Destroy; override;
    procedure PreencherGridClientes(APesquisa, ACampo: string);
    procedure PreencherComboClientes;
    procedure PreencherCamposForm(FCliente: TCliente; ACodigo: Integer);
    function Inserir(FCliente: TCliente; out sErro: string): Boolean;
    function Alterar(FCliente: TCliente; ACodigo: Integer; out sErro: string): Boolean;
    function Excluir(ACodigo: Integer; out sErro : string): Boolean;
    function GetDataSource: TDataSource;
    function VerificaClienteUtilizado(ACodigo: Integer): Boolean;

  end;

implementation

{ TClienteController }

constructor TClienteController.Create(AClienteRepository: IClienteRepository; AClienteService: IClienteService);
begin
  FCliente := TCliente.Create();
  FClienteRepository := TClienteRepository.Create();
  FClienteService := TClienteService.Create();
end;

destructor TClienteController.Destroy;
begin
  FCliente.Free;
  FClienteRepository.Free;
  FClienteService.Free;
  inherited;
end;

procedure TClienteController.PreencherGridClientes(APesquisa, ACampo: string);
var LCampo, SErro: string;
begin
  try
    if ACampo = 'Código' then
      LCampo := 'cli.cd_cliente';

    if ACampo = 'Nome' then
      LCampo := 'cli.des_nomecliente';

    if ACampo = 'Cidade' then
      LCampo := 'cli.des_cidade';

    if ACampo = '' then
      LCampo := 'cli.des_nomecliente';

    FClienteService.PreencherGridClientes(APesquisa, LCampo);
  except on E: Exception do
    begin
      SErro := 'Ocorreu um erro ao pesquisar a venda!' + sLineBreak + E.Message;
      raise;
    end;
  end;
end;

procedure TClienteController.PreencherComboClientes;
begin
  FClienteService.PreencherComboClientes();
end;

function TClienteController.Inserir(FCliente: TCliente; out sErro: string): Boolean;
begin

end;

procedure TClienteController.PreencherCamposForm(FCliente: TCliente; ACodigo: Integer);
begin

end;

function TClienteController.Alterar(FCliente: TCliente; ACodigo: Integer; out sErro: string): Boolean;
begin

end;

function TClienteController.Excluir(ACodigo: Integer; out sErro: string): Boolean;
begin

end;

function TClienteController.GetDataSource: TDataSource;
begin
  Result := FClienteService.GetDataSource;
end;

function TClienteController.VerificaClienteUtilizado(ACodigo: Integer): Boolean;
begin

end;

end.
